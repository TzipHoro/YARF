% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/YARF.R, R/YARF_builders.R
\docType{package}
\name{YARF}
\alias{YARF}
\alias{YARF-package}
\title{A fully customizable Random Forests implementation}
\usage{
YARF(X = NULL, y = NULL, Xy = NULL, Xother = NULL,
  allow_missingness_in_y = FALSE, num_trees = 500,
  bootstrap_indices = NULL, other_indices = NULL, mtry = NULL,
  nodesize = NULL, mtry_script = NULL, nodesize_script = NULL,
  cost_single_node_calc_script = NULL, node_assign_script = NULL,
  after_node_birth_function_script = NULL, aggregation_script = NULL,
  prune_if_script = NULL, shared_scripts = NULL, use_missing_data = TRUE,
  replace_missing_data_with_x_j_bar = FALSE, mem_cache_for_speed = TRUE,
  covariates_to_permute = NULL, serialize = FALSE, seed = NULL,
  wait = TRUE, verbose = TRUE, debug_log = FALSE)
}
\arguments{
\item{X}{The data frame of training data}

\item{y}{The training responses}

\item{Xy}{The data frame of training data where the last column is responses}

\item{Xother}{Other data that is used in the training but the RF doesn't split on it}

\item{allow_missingness_in_y}{If \code{TRUE}, missingness in the response variable, \code{y}, is allowed. If this is not
handled in the custom functions, YARF will crash. Default is \code{FALSE}.}

\item{num_trees}{The # of trees in the RF. Default is \code{500}.}

\item{bootstrap_indices}{A list with keys 1,2,..., num_trees where each value is the indices of the training data
you wish to use for each tree. The default is \code{NULL} indicating the default algorithm 
of sampling {1,...,n} with replacement (i.e. the non-parametric bootsrap default). Needless
to say indices specified here will not be part of the out-of-bag collection of indices.}

\item{other_indices}{An optional list with keys 1,2,..., num_trees where each value is indices of the training data
you wish to use in some custom way for each tree using a custom function. If not custom function
is specified which makes use of this, it will be ignored. However, indices specified here will not be part of 
the out-of-bag collection of indices. If this is not your wish, the elements in the vectors
specified in this list's values should be a subset of those in the values of \code{bootstrap_indices}.
The default is \code{NULL} indicating you do not wish to specify any "other" data records.}

\item{mtry}{The number of variables tried at every split. The default is \code{NULL} which indicates
the out-of-box RF default which is floor(p / 3) for regression and for classification,
floor(sqrt(p)). If you want a custom function, leave this NULL and see next parameter.}

\item{nodesize}{The minimum number of observations in a node. YARF will stop splitting at this point.
If \code{NULL} the out-of-the-box default of 5 for regression and 1 for classification 
will be used.}

\item{mtry_script}{If you wish to create a custom number of mtry, pass in javascript code here as a string.}

\item{nodesize_script}{A custom javascript function to be used to calculate nodesize. The default is \code{NULL} where
nodesize will be calculated as a static constant (see the \code{nodesize} argument).}

\item{cost_single_node_calc_script}{A custom cost calculation for a potential node (when considering a split) in Javascript. 
The default is \code{NULL} which means the out-of-the-box default of sum of squared error relative
to the sample average (if regression) and sum of entropy (if classification). You may find it 
convenient to also made a node assignment here. If so, make sure you specify the node assignment
function as a blank function (not \code{NULL}).}

\item{node_assign_script}{A custom node assignment function in Javascript. This function is run after RF greedily finds the 
"lowest cost" split. The default is \code{NULL} corresponding to the sample average of the node responses 
in regression or the modal class during classification.}

\item{after_node_birth_function_script}{A custom function in Javascript which is executed after a node is given birth to. The default is 
\code{NULL} which implies nothing special is done, the Random Forest default.}

\item{aggregation_script}{A custom javascript function which aggregates the predictions in the trees for one observations 
into one scalar prediction. The default is \code{NULL} corresponding to the sample average for
regression and the modal category for classification.}

\item{prune_if_script}{A custom javascript function which prunes a node (i.e. deletes the node's children and
sets the node to a leaf and sets a y_hat using the assign function). The default is \code{NULL}
which means no pruning is performed, the random forest default.}

\item{shared_scripts}{Custom Javascript code that are always in scope when running all your custom methods. 
The default is \code{NULL} for no shared scripts.}

\item{use_missing_data}{Use the "missing-incorporated-in-attributes" strategy to fit data with missingness. The 
default is \code{TRUE}.}

\item{mem_cache_for_speed}{}

\item{covariates_to_permute}{Indices of features to randomly permute when creating a YARF. The default is \code{NULL}
indicating no features are permuted. This is an argument used mostly by other YARF functions.}

\item{serialize}{Should the YARF model be saved? The default is \code{FALSE} as this is costly in processing 
time and memory. This can only be set to \code{TRUE} if \code{wait = TRUE}. If \code{TRUE},
we will automatically serialize after other operations that add data (such as the OOB evaluation).}

\item{seed}{Set a random seed for reproducibility.}

\item{wait}{Should we hang R to wait for the YARF model to complete? The default is \code{TRUE}.}

\item{verbose}{Should we print out messages verbosely during construction? Default is \code{FALSE}.}

\item{debug_log}{Should we print out messages from Java? Default is \code{FALSE}.}

\item{cost_both_children_calc_script}{A custom cost calculation for an entire split considering both the putative left and right children
nodes. The default is \code{NULL} which means the out-of-the-box default for Random Forests which is
sum of left and right nodes' costs for regression and average of left and right nodes' cost (relative
to the number of observations in each node).}
}
\value{
A list of all arguments passed in plus...
}
\description{
Software which helps practitioners optimally design experiments that measure the slope divided by the intercept.

Builds a YARF Model. There are many custom functions
}
\author{
Adam Kapelner \email{kapelner@qc.cuny.edu}

Adam Kapelner
}
\references{
TK
}
\keyword{Design,}
\keyword{Experimental}
\keyword{Slope}
\keyword{by}
\keyword{divided}
\keyword{intercept}

